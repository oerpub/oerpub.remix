<metal:use use-macro="base">

    <metal:script fill-slot="script-slot">
    <!-- Aloha editor -->
    <base href="${body_base}" />
    <link rel="stylesheet" type="text/css" href="${request.application_url}/aloha/src/css/aloha.css"> <!-- xhtml workaround --></link>
    <link rel="stylesheet" href="${request.application_url}/aloha/bootstrap/css/bootstrap.css" type="text/css"> <!-- xhtml workaround --></link>
    <link rel="stylesheet" href="${request.application_url}/aloha/bootstrap/css/bootstrap-responsive.css" type="text/css"> <!-- xhtml workaround --></link>
    <link rel="stylesheet" type="text/css" href="${request.static_url('oerpub.rhaptoslabs.swordpushweb:static/html5_metacontent.css')}"> <!-- xhtml workaround --></link>
    <link rel="stylesheet" type="text/css" href="${request.static_url('oerpub.rhaptoslabs.swordpushweb:static/html5_content_in_oerpub.css')}"> <!-- xhtml workaround --></link>
    <link rel="stylesheet" type="text/css" href="${request.static_url('oerpub.rhaptoslabs.swordpushweb:static/preview.css')}"> <!-- xhtml workaround --></link>
    <script type="text/javascript" src="${request.application_url}/aloha/src/lib/require.js"> <!-- xhtml workaround --></script>

    <!-- Mathjax -->
    <script src="${request.application_url}/aloha/src/plugins/extra/math/lib/MathJax.js?config=TeX-MML-AM_HTMLorMML-full&amp;delayStartupUntil=configured"> <!-- xhtml --></script>
    <script type="text/x-mathjax-config">MathJax.Hub.Config({
      jax: ["input/MathML", "input/TeX", "input/AsciiMath", "output/NativeMML", "output/HTML-CSS"],
      extensions: ["asciimath2jax.js", "tex2jax.js","mml2jax.js","MathMenu.js","MathZoom.js"],
      tex2jax: { inlineMath: [["[TEX_START]","[TEX_END]"], ["\\(", "\\)"]] },
      // Apparently we can't change the escape sequence for ASCIIMath (MathJax doesn't find it)
      // asciimath2jax: { inlineMath: [["[ASCIIMATH_START]", "[ASCIIMATH_END]"]], },

      // The default for Firefox is "HTML" for some reason so change it to MML
      MMLorHTML: {prefer:{MSIE:"MML",Firefox:"MML",Opera:"HTML",Chrome:"HTML",Safari:"HTML",other:"HTML"}},
      TeX: {
        extensions: ["AMSmath.js","AMSsymbols.js","noErrors.js","noUndefined.js"], noErrors: { disabled: true }
      },
      AsciiMath: { noErrors: { disabled: true } }
    });</script>

    <script src="${request.static_url('oerpub.rhaptoslabs.swordpushweb:static/aloha-settings.js')}"> <!-- xhtml workaround --></script>
    <script src="${request.application_url}/aloha/bootstrap/js/bootstrap.js"> <!-- xhtml workaround --></script>
    <script type="text/javascript" src="${request.application_url}/aloha/src/lib/aloha.js"
        data-aloha-plugins="common/ui,
                            extra/toolbar,
                            oerpub/popover,
                            common/format,
                            common/paste,
                            common/block,
                            common/list,
                            oerpub/table,
                            oerpub/math,
                            extra/draganddropfiles,
                            common/image,
                            oerpub/assorted,
                            common/undo,
                            extra/undobutton,
                            extra/genericbutton,
                            common/dom-to-xhtml"> <!-- xhtml workaround --></script>

        <script type="text/javascript">
        Aloha.ready(function(){
            Aloha.require(['PubSub', 'genericbutton/genericbutton-plugin'],
                    function(PubSub, GenericButton){
                // Save button is disabled until something is changed
                GenericButton.getButtons()["save"].enable(false);
                $('.btn.save').html('Saved');

                function savePreview(){
                    var editor = Aloha.getEditableById('canvas');
                    if(editor.isModified()){
                        // setUnmodified, to avoid another concurrent save from
                        // firing while this one is still ongoing.
                        editor.setUnmodified();

                        var $body = $('<body />');
                        $body.attr('xmlns',      'http://www.w3.org/1999/xhtml');
                        $body.attr('xmlns:c',    'http://cnx.rice.edu/cnxml');
                        $body.attr('xmlns:md',   'http://cnx.rice.edu/mdml/0.4');
                        $body.attr('xmlns:qml',  'http://cnx.rice.edu/qml/1.0');
                        $body.attr('xmlns:mod',  'http://cnx.rice.edu/#moduleIds' ); 
                        $body.attr('xmlns:bib',  'http://bibtexml.sf.net/');
                        $body.attr('xmlns:data', 'http://dev.w3.org/html5/spec/#custom');
                        $body.attr('class', 'content');

                        var html = $body.append(editor.getContents())
                            .get(0).outerHTML;
                        $.post("${request.route_url('preview_save')}",
                                {html: html}, function(data, statustext){
                            if(data.saved){
                                $('#statusmessage').data('message')('Saved');
                                GenericButton.getButtons()["save"].enable(false);
                                $('.btn.save').html('Saved');
                            } else {
                                $('#statusmessage').data('message')(data.error, 'error');
                            }
                        });
                    }
                }

                // Attach save handler to Save button
                PubSub.sub('swordpushweb.save', function(){
                    savePreview();
                });
                var NextStep = $('#show-neworexisting');
                NextStep.on('click', function(evt) {
                    savePreview();
                });

                // Set up status message area
                var statusarea = $('#statusmessage');
                statusarea.data('message', function(message, type) {
                    type = type || 'info';
                    $("<div />", {'class': type, text: message}).hide()
                        .appendTo(statusarea).center().fadeIn(700)
                        .delay(1500).fadeOut(800, function() { $(this).remove(); });
                });

                // Fetch the preview
                $('#statusmessage').data('message')('Loading preview...');
                Aloha.jQuery.get('${body_url}', function(data){
                    var $editable = Aloha.jQuery('#canvas').html(data);

                    // Remove the pyramid debug toolbar from the preview
                    // if it exists. This code should do nothing in production
                    $editable.find('#pDebug').remove();
                    $editable.aloha().focus();

                    MathJax.Hub.Configured();

                    // Auto-save periodically. This only does anything if
                    // editor.isModified().
                    window.setInterval(savePreview, 30000);

                    // Bind a handler for the changed event
                    var editor = Aloha.getEditableById('canvas');
                    Aloha.bind('aloha-smart-content-changed', function(){
                        if(editor.isModified()){
                            $('.btn.save').html('Save');
                            GenericButton.getButtons()["save"].enable(true);
                        }
                    });
                    Aloha.jQuery('#statusmessage').data('message')('Preview loaded');
                });
            });
        });
        </script>
    </metal:script>

    <metal:workflownav fill-slot="workflownav">
    ${form.begin(request.route_url('metadata'), name="preview_form")}
    ${form.csrf_token()}
    <div id="workflownav-wrap">
        <div id="workflownav-container">
            <div id="back-steps">
                <input type="button" class="btn"
                value="&#171; Back: Return to start page"
                id="back-to-chooser"
                title="Return to the previous screen to choose a different import or editing option"
                url="${request.route_url('choose')}"/>
            </div>

            <div id="forward-steps">
                <input id="show-neworexisting"
                href="#neworexisting"
                role="button"
                class="btn"
                data-toggle="modal"
                class="button forward-button"
                type="button"
                value="Next Step &#187;"
                url="${request.route_url('module_association')}"
                title="Select whether this will be used for a new module or to override the contents of an existing module">
            </div>

        </div>
    </div>
    </metal:workflownav>

    <metal:content-slot fill-slot="content-slot"
        tal:define="filename python:request.session.get('filename')">
    <div id="ie6-container-wrap">
        <div id="container">
            <div tal:replace="structure provider('toolbar')" />
            <div id="content">
            <div id="artboard">
                <div id="pageheader-wrap">

                    <div id="module-actions">
                        <div class="advanced" style="display: block;">
                            <h2 class="advanced-label">
                                Advanced
                            </h2>
                            <strong>Module actions: </strong>
                            <a id="download-copy"
                                title="Save a ZIP file containing the module's XML and metadata to your local computer."
                                href="#asdfaasdf"
                                tal:attributes="href request.route_url('download_zip')">
                                <span class="button">Download a copy</span>
                            </a>
                            <a id="edit-xml"
                                title="Make changes to the module by editing its XML code."
                                href="${request.route_url('cnxml')}">
                                <span class="button">Edit XML</span>
                            </a>
                        </div>
                    </div>

                    <div id="page-title">
                        <h1>
                            Preview:
                            <span class="metatitle">
                                Conversion of <span>${filename}</span>
                            </span>
                        </h1>
                    </div>

                    <div id="page-description">
                        <p class="forminfo">
                            View below how the module will appear in Connexions.
                        </p>
                    </div>

                </div>

                <div id="statusmessage"></div>
                <div id="editor">
                    <div id="canvas">
                    </div>
                </div>
            </div>
            </div>
        </div>
    </div>
    ${form.end()}


    <!-- Modal -->
    <div id="neworexisting" class="modal hide fade" tabindex="-1" role="dialog"
        aria-labelledby="New or existing" aria-hidden="true">
        <div class="modal-header">
            <button type="button" class="close" data-dismiss="modal" aria-hidden="true">×</button>
            <h3 id="neworexistingLabel">
                Is this for a new module or will it override an existing one?
            </h3>
        </div>
        <div class="modal-body">
            <div class="forminfo" style="margin: .5em 0 1em;">
                <button class="btn btn-primary submit-neworexisting" 
                    url="${request.route_url('metadata')}">
                    New module
                </button>
                This is an entirely new module. 
            </div>
            <div class="forminfo" style="margin: .5em 0 1em;">
                <button class="btn btn-primary submit-neworexisting" 
                    url="${request.route_url('module_association')}">
                    Override existing module
                </button>
                Choose an existing module to apply your import to, replacing its contents.  
            </div>
        </div>
        <div class="modal-footer">
            <button class="btn" data-dismiss="modal" aria-hidden="true">Close</button>
        </div>
    </div>

    </metal:content-slot>

    <metal:footer-slot fill-slot="footer-slot" />
</metal:use>
